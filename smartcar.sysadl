Model SysADLModel ; package SmartCarDUD { dimension Temperatura dimension QuantidadeCombustivel unit Celsius { dimension = Temperatura } unit Litros { dimension = QuantidadeCombustivel } } Requirement ControleDeCarro ( 0 ) { text = "O sistema tem que monitorar o carro em movimento e acionar o freio quando a central eletronica do automovel identificar temperatura elevada no motor ou combustivel muito proximo ao insuficiente" derive LigarMotor , DesligarMotor ; Requirement LigarMotor ( 1 ) { text = "O sistema deve ser capaz de ligar o motor quando o dispositivo de acionamento do motor for ligado" derive IdentificarQuantidadeCombustivel , IdentificarTemperatura ; } Requirement DesligarMotor ( 2 ) { text = "O motor deve ser desligado em situacoes criticas" derive DesligarMotorCombustivelInsuficiente , DesligarMotorSuperaquecimento ; Requirement DesligarMotorCombustivelInsuficiente ( 7 ) { text = "O sistema devera desligar o motor apos 2 minutos do alerta de combustivel abaixo de 2 litros" } Requirement DesligarMotorSuperaquecimento ( 8 ) { text = "O sistema devera desligar o motor apos 2 minutos do alerta de superaquecimento do motor" } } } Requirement IdentificarTemperatura ( 3 ) { text = "O sistema deve ser capaz de identificar a temperatura do motor" derive PainelTemperatura ; } Requirement IdentificarQuantidadeCombustivel ( 4 ) { text = "O sistema deve ser capaz de identificar a quantidade de combustivel" derive PainelCombustivel ; } Requirement AlertarMotorSuperaquecido ( 5 ) { text = "O sistema deve ser capaz de alertar o motorista quando o motor superaquecer" derive ControleDeCarro.DesligarMotor.DesligarMotorSuperaquecimento ; } Requirement AlertarCombustivelInsuficiente ( 6 ) { text = "O sistema deve ser capaz de alertar o motorista quando a quantidade de combustivel tiver abaixo de 2 litros" derive ControleDeCarro.DesligarMotor.DesligarMotorCombustivelInsuficiente ; } Requirement PainelTemperatura ( 9 ) { text = "O sistema deve exibir no painel o status da temperatura do motor" derive AlertarMotorSuperaquecido ; } Requirement PainelCombustivel ( 10 ) { text = "O sistema deve exibir no painel a quantidade de combustivel" derive AlertarCombustivelInsuficiente ; } package SmartCarVLD { enum ComandosMotor { ligarMotor , desligarMotor } enum ComandosPainel { ligarAlertaTemperatura , desligarAlertaTemperatura , ligarAlertaCombustivel , desligarAlertaCombustivel } value type Real { } value type String { } value type Boolean { } value type Int { } value type Void { } enum ComandosSensores { ligarSensorTemperatura , desligarSensorTemperatura , ligarSensorCombustivel , desligarSensorCombustivel } value type TemepraturaCelsius { unit = SmartCarDUD.Celsius dimension = SmartCarDUD.Temperatura } value type QuantidadeCombustivel { unit = SmartCarDUD.Litros dimension = SmartCarDUD.QuantidadeCombustivel } } package SmartCarPTD { import SmartCarVLD ; port def ComandosMotorIPT { flow in ComandosMotor } port def ComandosMotorOPT { flow out ComandosMotor } port def ComandosPainelIPT { flow in ComandosPainel } port def ComandosPortaOPT { flow out ComandosPainel } port def ComandosSensoresIPT { flow in ComandosSensores } port def ComandosSensoresOPT { flow out ComandosSensores } } package SmartCarCND { } package SmartCarCPD { }